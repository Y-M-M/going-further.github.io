<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python程序设计 on 陈皮的博客</title>
    <link>https://y-m-m.github.io/tags/python%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/</link>
    <description>Recent content in Python程序设计 on 陈皮的博客</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 10 Sep 2024 14:35:22 +0800</lastBuildDate>
    <atom:link href="https://y-m-m.github.io/tags/python%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>python程序设计</title>
      <link>https://y-m-m.github.io/post/python%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/</link>
      <pubDate>Tue, 10 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://y-m-m.github.io/post/python%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;考核&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在线作业 30分 oj 10.91.145.2&lt;/li&gt;&#xA;&lt;li&gt;小作业 30分 使用第三方工具，完成数据的爬取，处理和展示&lt;/li&gt;&#xA;&lt;li&gt;大作业 40分 综合使用数据处理工具，爬去网站信息，并对数据进行处理、分析和可视化展示&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;python语言介绍&#34;&gt;python语言介绍&lt;/h1&gt;&#xA;&lt;h2 id=&#34;python语言的基本特点&#34;&gt;python语言的基本特点&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;python是一种动态类型的，解释性的高级编程语言&#xA;&lt;ul&gt;&#xA;&lt;li&gt;静态类型：变量类型在程序运行前确定&lt;/li&gt;&#xA;&lt;li&gt;动态类型：变量类型在程序执行时确定，可以改变&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;语法简洁易读，编程模式非常符合人类的思维方式和习惯&lt;/li&gt;&#xA;&lt;li&gt;通用、跨平台&lt;/li&gt;&#xA;&lt;li&gt;强大的社区支持&lt;/li&gt;&#xA;&lt;li&gt;理想的“胶水语言”：具有跨语言跨平台跨技术栈的强大整合能力&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;python语言的优势&#34;&gt;python语言的优势&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;语法简洁，同时提供丰富的数据结构和标准库&lt;/li&gt;&#xA;&lt;li&gt;易学易用，学习周期短，开发效率高&#xA;&lt;ul&gt;&#xA;&lt;li&gt;语法接近自然语言&lt;/li&gt;&#xA;&lt;li&gt;虽然代码执行效率没有编译型语言高，能够节省编程时间&lt;/li&gt;&#xA;&lt;li&gt;第三方库几乎覆盖所有技术领域&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;python语言的缺点&#34;&gt;python语言的缺点&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;动态解释型语言，运行速度慢&lt;/li&gt;&#xA;&lt;li&gt;全局解释器锁(GIL)限制多线程并发&lt;/li&gt;&#xA;&lt;li&gt;源代码不能加密&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;python相关组织&#34;&gt;python相关组织&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;python软件基金会PSF&lt;/li&gt;&#xA;&lt;li&gt;python社区 指导委员会&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;python安装&#34;&gt;python安装&lt;/h1&gt;&#xA;&lt;h2 id=&#34;在命令行窗口使用repl&#34;&gt;在命令行窗口使用REPL&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;REPL是一种交互式编程环境，通常用于解释型编程语言&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Read&lt;/li&gt;&#xA;&lt;li&gt;Eval&lt;/li&gt;&#xA;&lt;li&gt;Print&lt;/li&gt;&#xA;&lt;li&gt;Loop&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;在命令行窗口运行py文件&#34;&gt;在命令行窗口运行.py文件&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;python file.py&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;python集成开发环境推荐&#34;&gt;python集成开发环境推荐&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;PyCharm&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Visual Studio Code&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;Subime Text&lt;/li&gt;&#xA;&lt;li&gt;Vim&lt;/li&gt;&#xA;&lt;li&gt;GNU Emacs&lt;/li&gt;&#xA;&lt;li&gt;IDLE&lt;/li&gt;&#xA;&lt;li&gt;Atom&lt;/li&gt;&#xA;&lt;li&gt;Spyder&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Jupyter&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;Eclipse&lt;/li&gt;&#xA;&lt;li&gt;Eric Python&lt;/li&gt;&#xA;&lt;li&gt;Wing&lt;/li&gt;&#xA;&lt;li&gt;PyScripter&lt;/li&gt;&#xA;&lt;li&gt;Pyzo&lt;/li&gt;&#xA;&lt;li&gt;Thonny&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;参考书&#34;&gt;参考书&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;python语言程序设计基础(第2版) 嵩天，礼欣，黄天宇著&lt;/li&gt;&#xA;&lt;li&gt;零基础入门学习Python(第2版) 小甲鱼(李佳宁)著&lt;/li&gt;&#xA;&lt;li&gt;python变成从入门到实践(第3版)&lt;/li&gt;&#xA;&lt;li&gt;python基础教程(第3版) Magnus Lie Hetland&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;python基本语法&#34;&gt;python基本语法&lt;/h1&gt;&#xA;&lt;h2 id=&#34;python程序基本结构&#34;&gt;python程序基本结构&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;简单语句：写在一行内的语句&lt;/li&gt;&#xA;&lt;li&gt;复合语句，包含其他语句(组)的语句，需要缩进来表示语句块的层次结构(除了要求缩进的情况，其他情况不能缩进)&#xA;&lt;ul&gt;&#xA;&lt;li&gt;条件语句 if elif else&#xA;&lt;ul&gt;&#xA;&lt;li&gt;句头、句体&lt;/li&gt;&#xA;&lt;li&gt;句头后面都是冒号结尾&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;循环语句 for while&lt;/li&gt;&#xA;&lt;li&gt;函数定义 def&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;注释 #&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;物理行和逻辑行&#34;&gt;物理行和逻辑行&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;物理行：回车&lt;/li&gt;&#xA;&lt;li&gt;逻辑行：根据显式或隐式行拼接规则所拼接在一起的&#xA;&lt;ul&gt;&#xA;&lt;li&gt;显示拼接行 \结尾&lt;/li&gt;&#xA;&lt;li&gt;隐式拼接行 圆括号、方括号、花括号内的表达式可以分成多个物理行，不必使用反斜杠&#xA;&lt;ul&gt;&#xA;&lt;li&gt;隐式行拼接可含注释&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;c和python程序的语法结构比较&#34;&gt;C和Python程序的语法结构比较&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;C语言&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;python&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;引用外部模块&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;#include&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;import 内置函数和对象直接调用&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;程序入口&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;main()函数&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;从第一行开始执行&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;语句结束标志&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;换行符&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;代码起始/结束标志&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;{}&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;对齐缩进&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;标识符和保留字&#34;&gt;标识符和保留字&lt;/h2&gt;&#xA;&lt;h3 id=&#34;python标识符&#34;&gt;python标识符&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;用来命名变量、函数、类、对象、模块等的名称&#xA;&lt;ul&gt;&#xA;&lt;li&gt;字符集：在ASCII字符集范围内，大小写字母(A&lt;del&gt;Z, a&lt;/del&gt;z)、数字(0~9)、下划线(_)&lt;/li&gt;&#xA;&lt;li&gt;首字母：不能以数字开头&lt;/li&gt;&#xA;&lt;li&gt;大小写：区分大小写&lt;/li&gt;&#xA;&lt;li&gt;保留字&lt;/li&gt;&#xA;&lt;li&gt;长度：语言对长度没有限制&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;python保留字&#34;&gt;python保留字&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;关键字(保留字)&lt;/li&gt;&#xA;&lt;li&gt;软关键字&#xA;&lt;ul&gt;&#xA;&lt;li&gt;python新增match语句，把match, case,_定义为软关键字，仅在match语句内部作为关键字&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;python变量和赋值语句&#34;&gt;python变量和赋值语句&lt;/h2&gt;&#xA;&lt;h3 id=&#34;变量&#34;&gt;变量&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;变量：在python中，可以将变量视为指向值(数据对象)的标识符&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;赋值语句&#34;&gt;赋值语句&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;赋值语句：变量=表达式&lt;/li&gt;&#xA;&lt;li&gt;python作为动态类型语言，变量使用前不需要声明其类型，变量的首次赋值就是其创建过程，变量的类型就是赋值给它的类型&lt;/li&gt;&#xA;&lt;li&gt;重新赋值不仅可以改变变量的值，也可以改变变量的类型&lt;/li&gt;&#xA;&lt;li&gt;在python中，&amp;rsquo;=&amp;lsquo;不是运算符，变量=表达式是赋值语句，不是赋值表达式&#xA;&lt;ul&gt;&#xA;&lt;li&gt;x = (y = y + 1)用法错误&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;赋值语句支持链式赋值&#xA;&lt;ul&gt;&#xA;&lt;li&gt;x = y = z = 5&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;赋值语句支持多重赋值&#xA;&lt;ul&gt;&#xA;&lt;li&gt;x, y, z = 5, &amp;lsquo;a&amp;rsquo;, 1.5&lt;/li&gt;&#xA;&lt;li&gt;例&#xA;&lt;ul&gt;&#xA;&lt;li&gt;交换两个变量的值 a, b = b, a&lt;/li&gt;&#xA;&lt;li&gt;从列表中取值&#xA;&lt;ul&gt;&#xA;&lt;li&gt;list = [1, 2, 3]&lt;/li&gt;&#xA;&lt;li&gt;a, b, c = list&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;python3.8中，新增了表达式，操作符为:=&#xA;&lt;ul&gt;&#xA;&lt;li&gt;x := (y := y + 1) 合法&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;python中的常量&#34;&gt;python中的常量&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;常量，在程序执行中其值不会改变的变量&#xA;&lt;ul&gt;&#xA;&lt;li&gt;python没有提供const，没有真正意义上的常量&lt;/li&gt;&#xA;&lt;li&gt;一般默认全大写的变量不会修改&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;python数据类型&#34;&gt;python数据类型&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;基本数据类型&#xA;&lt;ul&gt;&#xA;&lt;li&gt;整型&#xA;&lt;ul&gt;&#xA;&lt;li&gt;只有一种类型int没有固定的最大值限制，实际受限于可用内存&lt;/li&gt;&#xA;&lt;li&gt;可以使用多种进制&#xA;&lt;ul&gt;&#xA;&lt;li&gt;十进制 除了0以外，首位不能是0&lt;/li&gt;&#xA;&lt;li&gt;二进制0b或0B&lt;/li&gt;&#xA;&lt;li&gt;八进制0o或0O&lt;/li&gt;&#xA;&lt;li&gt;十六进制0x或0X&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;浮点型&#xA;&lt;ul&gt;&#xA;&lt;li&gt;可用十进制或科学计数法表示&lt;/li&gt;&#xA;&lt;li&gt;采用十进制表示时，可以省略小数或整数部分，只要保留小数点&lt;/li&gt;&#xA;&lt;li&gt;科学计数法使用e或E来表示幂&lt;/li&gt;&#xA;&lt;li&gt;数值范围存在限制，小树精度也存在限制&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;ol start=&#34;10&#34;&gt;&#xA;&lt;li&gt;合法，等同于10.0(省略了小数部分)&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;.1 合法&lt;/li&gt;&#xA;&lt;li&gt;1E+10 合法&lt;/li&gt;&#xA;&lt;li&gt;1e10 合法&lt;/li&gt;&#xA;&lt;li&gt;3.14e-3 合法&lt;/li&gt;&#xA;&lt;li&gt;0e0&lt;/li&gt;&#xA;&lt;li&gt;1 呃0 不合法，内部不能有空格&lt;/li&gt;&#xA;&lt;li&gt;01e010 合法，浮点数解析时&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;组合数据类型&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
  </channel>
</rss>
