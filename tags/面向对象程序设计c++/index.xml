<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>面向对象程序设计(c&#43;&#43;) on 陈皮的博客</title>
    <link>https://y-m-m.github.io/tags/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1c&#43;&#43;/</link>
    <description>Recent content in 面向对象程序设计(c&#43;&#43;) on 陈皮的博客</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 30 Sep 2024 20:40:19 +0800</lastBuildDate>
    <atom:link href="https://y-m-m.github.io/tags/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1c++/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>面向对象程序设计(C&#43;&#43;)</title>
      <link>https://y-m-m.github.io/post/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1c&#43;&#43;/</link>
      <pubDate>Fri, 01 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://y-m-m.github.io/post/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1c&#43;&#43;/</guid>
      <description>&lt;h1 id=&#34;参考书目&#34;&gt;参考书目&lt;/h1&gt;&#xA;&lt;h2 id=&#34;入门级别&#34;&gt;入门级别&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;C++面向对象程序设计，龚晓庆编著，清华大学出版社&lt;/li&gt;&#xA;&lt;li&gt;Essential C++中文版，Stanley B.Lippman著，华中科技大学出版社&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;大全类&#34;&gt;大全类&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;C++程序设计语言，Bjarne Stroustrup著，机械工业出版社&lt;/li&gt;&#xA;&lt;li&gt;C++ Primer中文版，Stanley B.Lippman等著，人民邮电出版社&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;高阶进阶类&#34;&gt;高阶进阶类&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Effective C++, More Effective C++, Thinking in C++&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;考核方式&#34;&gt;考核方式&lt;/h1&gt;&#xA;&lt;h2 id=&#34;主要考核应用编程实践的完成情况和能力&#34;&gt;主要考核应用编程实践的完成情况和能力&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;必须完成的内容：课上的作业、综合编程练习&lt;/li&gt;&#xA;&lt;li&gt;每个同学必须独立完成&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;课件资料实验安排及通知等&#34;&gt;课件资料、实验安排及通知等&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;课堂上&lt;/li&gt;&#xA;&lt;li&gt;爱课堂、QQ群&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;答疑提交作业方式&#34;&gt;答疑、提交作业方式&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;邮箱:bupthomework@163.com&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;介绍&#34;&gt;介绍&lt;/h1&gt;&#xA;&lt;h2 id=&#34;程序设计语言的发展&#34;&gt;程序设计语言的发展&lt;/h2&gt;&#xA;&lt;h3 id=&#34;硬件语言&#34;&gt;硬件语言&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;机器语言&lt;/li&gt;&#xA;&lt;li&gt;汇编语言&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;非结构化语言&#34;&gt;非结构化语言&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;FORTRAN&lt;/li&gt;&#xA;&lt;li&gt;BASIC&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;结构化的语言&#34;&gt;结构化的语言&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;PASCAL 允许嵌套&lt;/li&gt;&#xA;&lt;li&gt;C 不允许嵌套&lt;/li&gt;&#xA;&lt;li&gt;Ada&lt;/li&gt;&#xA;&lt;li&gt;Alogol&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;面向对象的语言&#34;&gt;面向对象的语言&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Smalltalk&lt;/li&gt;&#xA;&lt;li&gt;C++&lt;/li&gt;&#xA;&lt;li&gt;Java&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;组件编程&#34;&gt;组件编程&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;.net&lt;/li&gt;&#xA;&lt;li&gt;C#/C++/Java&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;新出现的语言&#34;&gt;新出现的语言&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Python(动态的、面向对象的脚本语言)&lt;/li&gt;&#xA;&lt;li&gt;Go(静态强类型、编译型、并发型)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;结构化程序设计面向过程&#34;&gt;结构化程序设计（面向过程）&lt;/h2&gt;&#xA;&lt;h3 id=&#34;自顶向下逐步求精模块化&#34;&gt;自顶向下，逐步求精，模块化&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;先考虑总体，后考虑细节；先考虑全局目标，后考虑局部目标&lt;/li&gt;&#xA;&lt;li&gt;对复杂问题，分解成若干简单问题，确立子目标，逐步细节化&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;限制直接跳转goto的应用&#34;&gt;限制直接跳转（goto）的应用&lt;/h3&gt;&#xA;&lt;h3 id=&#34;程序算法数据结构&#34;&gt;程序=算法+数据结构&lt;/h3&gt;&#xA;&lt;h2 id=&#34;面向对象程序设计&#34;&gt;面向对象程序设计&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;使用对象模型来描述或解决现实世界中的问题（以对象为核心）&lt;/li&gt;&#xA;&lt;li&gt;大幅度提高软件开发的成功率，提高软件的可移植性、重用性和可靠性，减少日后的维护费用&lt;/li&gt;&#xA;&lt;li&gt;特征&#xA;&lt;ul&gt;&#xA;&lt;li&gt;对象模型，对象概念再从建模到构建程序的各个方面广泛使用&lt;/li&gt;&#xA;&lt;li&gt;抽象化，对象的属性进行抽象&lt;/li&gt;&#xA;&lt;li&gt;封装性，对对象的操作被封装在特定的作用范围&lt;/li&gt;&#xA;&lt;li&gt;多态性，派生对象的操作（方法）可以存在不同实现&lt;/li&gt;&#xA;&lt;li&gt;继承性，方法和属性可以在类间被继承和传递&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;c与c的关系&#34;&gt;C++与C的关系&lt;/h2&gt;&#xA;&lt;h3 id=&#34;c源于c语言&#34;&gt;C++源于C语言&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;C语言是在B语言的基础上发展起来的&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
