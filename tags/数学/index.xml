<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>数学 on 陈皮的博客</title>
    <link>https://y-m-m.github.io/tags/%E6%95%B0%E5%AD%A6/</link>
    <description>Recent content in 数学 on 陈皮的博客</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 18 Nov 2024 09:09:43 +0800</lastBuildDate>
    <atom:link href="https://y-m-m.github.io/tags/%E6%95%B0%E5%AD%A6/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>leetcode 683 平方数之和</title>
      <link>https://y-m-m.github.io/post/leetcode683%E5%B9%B3%E6%96%B9%E6%95%B0%E4%B9%8B%E5%92%8C/</link>
      <pubDate>Mon, 04 Nov 2024 00:00:00 +0000</pubDate>
      <guid>https://y-m-m.github.io/post/leetcode683%E5%B9%B3%E6%96%B9%E6%95%B0%E4%B9%8B%E5%92%8C/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://leetcode.cn/problems/sum-of-square-numbers/description/&#34;&gt;leetcode 683 平方数之和&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;题目&#34;&gt;题目&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;给定一个非负整数 c ，你要判断是否存在两个整数 a 和 b，使得 a&lt;!-- raw HTML omitted --&gt;2&lt;!-- raw HTML omitted --&gt; + b&lt;!-- raw HTML omitted --&gt;2&lt;!-- raw HTML omitted --&gt; = c 。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h1 id=&#34;示例&#34;&gt;示例&lt;/h1&gt;&#xA;&lt;h2 id=&#34;示例一&#34;&gt;示例一&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;输入：c = 5&#xA;输出：true&#xA;解释：1 * 1 + 2 * 2 = 5&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;示例二&#34;&gt;示例二&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;输入：c = 3&#xA;输出：false&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h1 id=&#34;提示&#34;&gt;提示&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;0 &amp;lt;= c &amp;lt;= 2&lt;!-- raw HTML omitted --&gt;31&lt;!-- raw HTML omitted --&gt; - 1&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h1 id=&#34;题解&#34;&gt;题解&lt;/h1&gt;&#xA;&lt;h2 id=&#34;方法一&#34;&gt;方法一&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Solution&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;judgeSquareSum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;unordered_set&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;little_squares&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;square&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;base&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;square&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;little_squares&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;insert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;square&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;square&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;square&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;base&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;square&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;base&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;square&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;little_squares&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;square&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;base&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;square&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;base&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;提交结果&lt;/p&gt;</description>
    </item>
    <item>
      <title>leetcode 685 冗余连接二</title>
      <link>https://y-m-m.github.io/post/leetcode69x%E7%9A%84%E5%B9%B3%E6%96%B9%E6%A0%B9/</link>
      <pubDate>Mon, 28 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://y-m-m.github.io/post/leetcode69x%E7%9A%84%E5%B9%B3%E6%96%B9%E6%A0%B9/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://leetcode.cn/problems/sqrtx/description/&#34;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;题目&#34;&gt;题目&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;给你一个非负整数 x ，计算并返回 x 的 算术平方根 。          &lt;br&gt;&#xA;由于返回类型是整数，结果只保留 整数部分 ，小数部分将被 舍去 。                    &lt;br&gt;&#xA;注意：不允许使用任何内置指数函数和算符，例如 pow(x, 0.5) 或者 x ** 0.5 。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h1 id=&#34;示例&#34;&gt;示例&lt;/h1&gt;&#xA;&lt;h2 id=&#34;示例一&#34;&gt;示例一&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;输入：x = 4          &lt;br&gt;&#xA;输出：2&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;示例二&#34;&gt;示例二&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;输入：x = 8                 &lt;br&gt;&#xA;输出：2                    &lt;br&gt;&#xA;解释：8 的算术平方根是 2.82842&amp;hellip;, 由于返回类型是整数，小数部分将被舍去。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h1 id=&#34;提示&#34;&gt;提示&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;0 &amp;lt;= x &amp;lt;= $2^31$ - 1&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;题解&#34;&gt;题解&lt;/h1&gt;&#xA;&lt;h2 id=&#34;方法一&#34;&gt;方法一&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Solution&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;mySqrt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;提交结果&#xA;&lt;ul&gt;&#xA;&lt;li&gt;通过&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;分析&#xA;&lt;ul&gt;&#xA;&lt;li&gt;暴力直接计算，从0开始遍历，直到得到想要的结果&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;方法二-袖珍计算器算法&#34;&gt;方法二 袖珍计算器算法&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Solution&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mySqrt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ans&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;exp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.5&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ans&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ans&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ans&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ans&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;提交结果&#xA;&lt;ul&gt;&#xA;&lt;li&gt;通过&lt;/li&gt;&#xA;&lt;li&gt;$x^{1/2} = e^{1/2lnx}$&lt;/li&gt;&#xA;&lt;li&gt;注意&#xA;&lt;img src=&#34;https://y-m-m.github.io/images/%E6%88%AA%E5%B1%8F2024-11-18%2009.00.52.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;方法三-二分查找&#34;&gt;方法三 二分查找&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Solution&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mySqrt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;l&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ans&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;l&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;ans&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;l&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ans&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;提交结果&#xA;&lt;ul&gt;&#xA;&lt;li&gt;通过&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;分析&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在0到x的所有数里，最右边的≤x的数，即为最后的答案&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;参考资料&#34;&gt;参考资料&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://leetcode.cn/problems/sqrtx/solutions/238553/x-de-ping-fang-gen-by-leetcode-solution/&#34;&gt;leetcode官方题解&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>leetcode 1227 飞机座位分配概率</title>
      <link>https://y-m-m.github.io/post/leetcode1227%E9%A3%9E%E6%9C%BA%E5%BA%A7%E4%BD%8D%E5%88%86%E9%85%8D%E6%A6%82%E7%8E%87/</link>
      <pubDate>Fri, 04 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://y-m-m.github.io/post/leetcode1227%E9%A3%9E%E6%9C%BA%E5%BA%A7%E4%BD%8D%E5%88%86%E9%85%8D%E6%A6%82%E7%8E%87/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://leetcode.cn/problems/airplane-seat-assignment-probability/description/&#34;&gt;leetcode 1227 飞机座位分配概率&lt;/a&gt;&#xA;这是一道超有意思的题&lt;/p&gt;&#xA;&lt;h2 id=&#34;题目&#34;&gt;题目&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;有 n 位乘客即将登机，飞机正好有 n 个座位。第一位乘客的票丢了，他随便选了一个座位坐下。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;剩下的乘客将会：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;如果他们自己的座位还空着，就坐到自己的座位上，&lt;/li&gt;&#xA;&lt;li&gt;当他们自己的座位被占用时，随机选择其他座位&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;第 n 位乘客坐在自己的座位上的概率是多少？&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;示例&#34;&gt;示例&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;示例一&#xA;&lt;ul&gt;&#xA;&lt;li&gt;输入：n = 1&lt;/li&gt;&#xA;&lt;li&gt;输出：1.00000&lt;/li&gt;&#xA;&lt;li&gt;解释：第一个人只会坐在自己的位置上。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;示例二&#xA;&lt;ul&gt;&#xA;&lt;li&gt;输入: n = 2&lt;/li&gt;&#xA;&lt;li&gt;输出: 0.50000&lt;/li&gt;&#xA;&lt;li&gt;解释：在第一个人选好座位坐下后，第二个人坐在自己的座位上的概率是 0.5&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;提示&#34;&gt;提示&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;1 &amp;lt;= n &amp;lt;= 10&lt;!-- raw HTML omitted --&gt;5&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;题解&#34;&gt;题解&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Solution&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nthPersonGetsNthSeat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;1.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;提交结果&#xA;&lt;ul&gt;&#xA;&lt;li&gt;通过&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;参考资料&#34;&gt;参考资料&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://leetcode.cn/problems/airplane-seat-assignment-probability/solutions/43180/ju-ti-fen-xi-lai-yi-bo-by-jobhunter-4/&#34;&gt;leetcode题解&lt;/a&gt;&#xA;&lt;a href=&#34;https://leetcode.cn/problems/airplane-seat-assignment-probability/solutions/664495/fei-ji-zuo-wei-fen-pei-gai-lu-by-leetcod-gyw4/&#34;&gt;leetcode官方题解&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>离散数学</title>
      <link>https://y-m-m.github.io/post/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/</link>
      <pubDate>Mon, 08 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://y-m-m.github.io/post/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/</guid>
      <description>&lt;h1 id=&#34;关系&#34;&gt;关系&lt;/h1&gt;&#xA;&lt;h2 id=&#34;关系及关系性质&#34;&gt;关系及关系性质&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;二元关系 A*B的子集&lt;/li&gt;&#xA;&lt;li&gt;n元关系 A&lt;!-- raw HTML omitted --&gt;1&lt;!-- raw HTML omitted --&gt;,A&lt;!-- raw HTML omitted --&gt;2&lt;!-- raw HTML omitted --&gt;&amp;hellip;A&lt;!-- raw HTML omitted --&gt;n&lt;!-- raw HTML omitted --&gt;的子集，A&lt;!-- raw HTML omitted --&gt;i&lt;!-- raw HTML omitted --&gt;is domains, domains的顺序是重要的&lt;/li&gt;&#xA;&lt;li&gt;补关系 complementary relations&lt;/li&gt;&#xA;&lt;li&gt;逆关系 inverse relations&lt;/li&gt;&#xA;&lt;li&gt;函数：特殊的关系&lt;/li&gt;&#xA;&lt;li&gt;关系A to A&lt;/li&gt;&#xA;&lt;li&gt;自反：reflexive(irreflexive 反自反)&lt;/li&gt;&#xA;&lt;li&gt;对称：symmetric(antisymmetry 反对称)(asymmetric 非对称)非对称的关系一定是反自反的&lt;/li&gt;&#xA;&lt;li&gt;传递：transive R&lt;!-- raw HTML omitted --&gt;n&lt;!-- raw HTML omitted --&gt;包含于R(n=1，2，3&amp;hellip;)&lt;/li&gt;&#xA;&lt;li&gt;关系复合：R&lt;!-- raw HTML omitted --&gt;2&lt;!-- raw HTML omitted --&gt;oR&lt;!-- raw HTML omitted --&gt;1&lt;!-- raw HTML omitted --&gt;，R&lt;!-- raw HTML omitted --&gt;1&lt;!-- raw HTML omitted --&gt;复合R&lt;!-- raw HTML omitted --&gt;2&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;关系的表示&#34;&gt;关系的表示&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;0-1矩阵&lt;/li&gt;&#xA;&lt;li&gt;directed graphs&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;关系闭包closures-of-relations&#34;&gt;关系闭包closures of relations&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;自反闭包reflexive closure of R&lt;/li&gt;&#xA;&lt;li&gt;对称闭包&lt;/li&gt;&#xA;&lt;li&gt;传递闭包 求R&lt;!-- raw HTML omitted --&gt;i&lt;!-- raw HTML omitted --&gt;的并集(i=1,2..n)；Warshall&amp;rsquo;s algorithm&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;等价关系equivalence-relations&#34;&gt;等价关系equivalence relations&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;自反；对称；传递&lt;/li&gt;&#xA;&lt;li&gt;集合的划分-&amp;gt;等价类partitions&lt;/li&gt;&#xA;&lt;li&gt;商集A/R&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;偏序关系partial-orderings&#34;&gt;偏序关系partial orderings&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;偏序集合partially ordered sets&lt;/li&gt;&#xA;&lt;li&gt;偏序关系partial order 自反、反对称、传递&lt;/li&gt;&#xA;&lt;li&gt;线序关系：可比(comparable)，不可比(incomparable)&lt;/li&gt;&#xA;&lt;li&gt;全序集合linearly ordered set：所有元素对之间均可比 (linear order全序关系或线序关系-&amp;gt;chain)&lt;/li&gt;&#xA;&lt;li&gt;良序关系well-ordered 所有非空集合都有一个最小元&lt;/li&gt;&#xA;&lt;li&gt;乘积偏序product partial order&lt;/li&gt;&#xA;&lt;li&gt;词典顺序lexicographic 先看第一个元素，第一个元素相同再看第二个元素&lt;/li&gt;&#xA;&lt;li&gt;哈斯图Hasse Diagrams&lt;/li&gt;&#xA;&lt;li&gt;极大元maximal element&lt;/li&gt;&#xA;&lt;li&gt;极小元minimal element&lt;/li&gt;&#xA;&lt;li&gt;最大元greatest element(单位元unit element) 不一定有&lt;/li&gt;&#xA;&lt;li&gt;最小元least element(零元 zero element) 不一定有&lt;/li&gt;&#xA;&lt;li&gt;拓扑排序topological sorting（找极小元，找完去掉，继续找极小元）&lt;/li&gt;&#xA;&lt;li&gt;最小上界LUB&lt;/li&gt;&#xA;&lt;li&gt;最大下界GLB&lt;/li&gt;&#xA;&lt;li&gt;格lattices：所有子集都有LUB和GLB&lt;/li&gt;&#xA;&lt;li&gt;子格sublattice：如果a和b都在原格中，则a和b的LUB和GLB也都在原格中&lt;/li&gt;&#xA;&lt;li&gt;有界：如果L有最大元和最小元，then lattice L is said to be bounded&lt;/li&gt;&#xA;&lt;li&gt;如果L是有限格，那么L是有界的&lt;/li&gt;&#xA;&lt;li&gt;分配格Distributive lattice：最大上界和最小下界的运算符和分配律 -&amp;gt; nondistributive&lt;/li&gt;&#xA;&lt;li&gt;补元(complement)：如果a和b的最小上界是最大元，最小下界是最小元，则a和b互为补元&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;半群和群&#34;&gt;半群和群&lt;/h1&gt;&#xA;&lt;h2 id=&#34;半群&#34;&gt;半群&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;封闭 closure&lt;/li&gt;&#xA;&lt;li&gt;二元运算 binary operation&lt;/li&gt;&#xA;&lt;li&gt;交换律 commutative&lt;/li&gt;&#xA;&lt;li&gt;结合率 associative&lt;/li&gt;&#xA;&lt;li&gt;分配律 distributive property&lt;/li&gt;&#xA;&lt;li&gt;德·摩根定理 De Morgan&amp;rsquo;s lawns&lt;/li&gt;&#xA;&lt;li&gt;单位元 Identity for an operation&lt;/li&gt;&#xA;&lt;li&gt;逆元 Iverse&lt;/li&gt;&#xA;&lt;li&gt;广群：非空、封闭的&lt;/li&gt;&#xA;&lt;li&gt;半群：非空、封闭、可结合&lt;/li&gt;&#xA;&lt;li&gt;单位元、幺元 identity&lt;/li&gt;&#xA;&lt;li&gt;独异点、含幺半群 monoid&lt;/li&gt;&#xA;&lt;li&gt;子半群 subsemigroup&lt;/li&gt;&#xA;&lt;li&gt;同构映射 isomorphism：one to one，f(a * b) = f(a) *&amp;rsquo; f(b)&lt;/li&gt;&#xA;&lt;li&gt;同态映射 homomorphism：everywhere-defined function, f(a * b) = f(a) *&amp;rsquo; f(b)&lt;/li&gt;&#xA;&lt;li&gt;products semmigroup 乘积半群&lt;/li&gt;&#xA;&lt;li&gt;quotients of semigroups 商半群&lt;/li&gt;&#xA;&lt;li&gt;同余关系 congruence relation aRa&amp;rsquo; and bRb&amp;rsquo; imply (a*b)R(a&amp;rsquo;*b&#39;)&lt;/li&gt;&#xA;&lt;li&gt;自然同态 natural homomorphism&lt;/li&gt;&#xA;&lt;li&gt;满同态函数 aRb if and only if f(a) = f(b)&lt;/li&gt;&#xA;&lt;li&gt;同态基本定理：满同态与商群（自然同态）同构&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;群&#34;&gt;群&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;有幺元identity的群成为独异点&lt;/li&gt;&#xA;&lt;li&gt;半群+幺元&lt;/li&gt;&#xA;&lt;li&gt;阿贝尔群Abelian：群+交换律&lt;/li&gt;&#xA;&lt;li&gt;有限群finite group：阶(order)是元素的数目&lt;/li&gt;&#xA;&lt;li&gt;含有一个元素的群：1种，两个：1种，三个：V和Z&lt;!-- raw HTML omitted --&gt;4&lt;!-- raw HTML omitted --&gt;两种&lt;/li&gt;&#xA;&lt;li&gt;S&lt;!-- raw HTML omitted --&gt;3&lt;!-- raw HTML omitted --&gt;：f&lt;!-- raw HTML omitted --&gt;2&lt;!-- raw HTML omitted --&gt;,f&lt;!-- raw HTML omitted --&gt;3&lt;!-- raw HTML omitted --&gt;,f&lt;!-- raw HTML omitted --&gt;1&lt;!-- raw HTML omitted --&gt;分别是三角形绕O点旋转120度，240度和360度；g&lt;!-- raw HTML omitted --&gt;1&lt;!-- raw HTML omitted --&gt;,g&lt;!-- raw HTML omitted --&gt;2&lt;!-- raw HTML omitted --&gt;,g&lt;!-- raw HTML omitted --&gt;3&lt;!-- raw HTML omitted --&gt;分别是让三角形关于I&lt;!-- raw HTML omitted --&gt;1&lt;!-- raw HTML omitted --&gt;,I&lt;!-- raw HTML omitted --&gt;2&lt;!-- raw HTML omitted --&gt;和I&lt;!-- raw HTML omitted --&gt;3&lt;!-- raw HTML omitted --&gt;对称&lt;/li&gt;&#xA;&lt;li&gt;子群subgroup&lt;/li&gt;&#xA;&lt;li&gt;平凡子群trivial subgroups：本身和只含幺元的集合&lt;/li&gt;&#xA;&lt;li&gt;S&lt;!-- raw HTML omitted --&gt;3&lt;!-- raw HTML omitted --&gt;不是阿贝尔群，Z&lt;!-- raw HTML omitted --&gt;6&lt;!-- raw HTML omitted --&gt;是阿贝尔群，二者不同构&lt;/li&gt;&#xA;&lt;li&gt;Z&lt;!-- raw HTML omitted --&gt;m&lt;!-- raw HTML omitted --&gt;*Z&lt;!-- raw HTML omitted --&gt;n&lt;!-- raw HTML omitted --&gt;与Z&lt;!-- raw HTML omitted --&gt;mn&lt;!-- raw HTML omitted --&gt;同构当且仅当m与n的最大公因数为1&lt;/li&gt;&#xA;&lt;li&gt;左陪集left coset aH&lt;/li&gt;&#xA;&lt;li&gt;右陪集right coset Ha&lt;/li&gt;&#xA;&lt;li&gt;正规子群normal aH = Ha（集合相等，不一定要每个元素都相等）&lt;/li&gt;&#xA;&lt;li&gt;阿贝尔群的任意一个子群都是正规子群&lt;/li&gt;&#xA;&lt;li&gt;核kernel：同态映射中映射到幺元的元素&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;群码&#34;&gt;群码&lt;/h1&gt;&#xA;&lt;h1 id=&#34;先进的计数技巧&#34;&gt;先进的计数技巧&lt;/h1&gt;&#xA;&lt;h2 id=&#34;求解递推关系&#34;&gt;求解递推关系&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;生成函数&lt;/li&gt;&#xA;&lt;li&gt;特征根&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;图&#34;&gt;图&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;欧拉公式：r=e-v+2&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;树&#34;&gt;树&lt;/h1&gt;</description>
    </item>
    <item>
      <title>Introduction to linear algebra</title>
      <link>https://y-m-m.github.io/post/introduction-to-linear-algebra/</link>
      <pubDate>Sun, 11 Dec 2022 00:00:00 +0000</pubDate>
      <guid>https://y-m-m.github.io/post/introduction-to-linear-algebra/</guid>
      <description>&lt;h1 id=&#34;矩阵乘法&#34;&gt;矩阵乘法&lt;/h1&gt;&#xA;&lt;h2 id=&#34;将矩阵的初等变换和矩阵乘法相联系&#34;&gt;将矩阵的初等变换和矩阵乘法相联系&lt;/h2&gt;&#xA;&lt;p&gt;以矩阵诠释消元变化 &lt;br&gt;&#xA;左乘是行变换，右乘是列变换&lt;/p&gt;&#xA;&lt;h2 id=&#34;矩阵乘法的其他解释方式&#34;&gt;矩阵乘法的其他解释方式&lt;/h2&gt;&#xA;&lt;p&gt;将结果看作第一个矩阵中列向量按照第二个矩阵进行线性排列    &lt;br&gt;&#xA;或看作第二个矩阵中的行向量按照第一个矩阵进行线性排列的结果&lt;/p&gt;&#xA;&lt;h2 id=&#34;矩阵乘法的五种运算方式&#34;&gt;矩阵乘法的五种运算方式&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;常规方法&lt;/li&gt;&#xA;&lt;li&gt;第一个矩阵列向量的线性组合&lt;/li&gt;&#xA;&lt;li&gt;第二个矩阵行向量的线性组合&lt;/li&gt;&#xA;&lt;li&gt;第一个矩阵的列乘以第二个矩阵的行&lt;/li&gt;&#xA;&lt;li&gt;分块乘法&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;逆矩阵&#34;&gt;逆矩阵&lt;/h1&gt;&#xA;&lt;h2 id=&#34;逆矩阵-1&#34;&gt;逆矩阵&lt;/h2&gt;&#xA;&lt;p&gt;方阵的左逆等于右逆（其实就相当于AB=E中的A和B可以互换位置）&lt;/p&gt;&#xA;&lt;h2 id=&#34;方阵不可逆的解释&#34;&gt;方阵不可逆的解释&lt;/h2&gt;&#xA;&lt;p&gt;行/列向量中，有一行/列未做出贡献，不能完全构成单位矩阵中的向量  &lt;br&gt;&#xA;Ax = 0有非零解时（其实就相当与A的行列式等于0），方阵不可逆&lt;/p&gt;&#xA;&lt;h2 id=&#34;求解逆矩阵的方法&#34;&gt;求解逆矩阵的方法&lt;/h2&gt;&#xA;&lt;p&gt;拆成列向量的形式，再求解线性方程组 &lt;br&gt;&#xA;增广矩阵的变换（解释：A的逆乘以增广矩阵，将增广矩阵分块来看）&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;$ ABB^{-1}A^{-1} = E $&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;$AA^{-1} = I$&lt;br&gt;&#xA;两边取转置    &lt;br&gt;&#xA;$ (A^{-1})^T(A)^T = I $&#xA;-&amp;gt;二者互为转置，转置和逆两种运算对于单个矩阵来说可以颠倒  &lt;br&gt;&#xA;$ (A^T)^{-1}=(A^{-1})^T $&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;消元正确认识矩阵的概念&#34;&gt;消元：正确认识矩阵的概念&lt;/h1&gt;&#xA;&lt;h2 id=&#34;数学符号的含义&#34;&gt;数学符号的含义&lt;/h2&gt;&#xA;&lt;p&gt;L：下三角矩阵  &lt;br&gt;&#xA;U：上三角矩阵&lt;/p&gt;&#xA;&lt;h2 id=&#34;消元的顺序&#34;&gt;消元的顺序&lt;/h2&gt;&#xA;&lt;p&gt;&lt;em&gt;$ E_{32}E_{21} $&lt;/em&gt;  &lt;br&gt;&#xA;&lt;em&gt;是相对右侧向量而来的变化，要计算E，要看他们对右侧向量的叠加效果&lt;/em&gt; &lt;br&gt;&#xA;&lt;em&gt;先做第二行的变换再做第三行的变换，第二行的会影响第三行的…… &lt;br&gt;&#xA;$E_{21}会影响E_{32}$ &lt;br&gt;&#xA;挪到右边去就没有这个影响了……（顺序会倒过来)  &lt;br&gt;&#xA;从下面的行开始做消元&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;EA=U   &lt;br&gt;&#xA;A=LU：如果不存在行变换，消元乘数可以直接写入L中&lt;/p&gt;&#xA;&lt;p&gt;消元时左乘E，对A进行行初等变换-&amp;gt;对U进行行初等变换&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;操作数？？        &lt;br&gt;&#xA;$ 大概是n^2+(n-1)^2+(n-2)^2+···+1^2 $&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;$1/3n^3 (对n2积分)$&lt;/strong&gt;&lt;/em&gt;  &lt;br&gt;&#xA;&lt;em&gt;&lt;strong&gt;如果在右侧加上常数向量b，则还需要再进行n^2次操作&#xA;微积分考虑连续状态下对求和，但线性代数是离散的&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;数学名词的含义&#34;&gt;数学名词的含义&lt;/h2&gt;&#xA;&lt;p&gt;置换矩阵：逆与转置相等&lt;/p&gt;&#xA;&lt;h1 id=&#34;向量空间&#34;&gt;向量空间&lt;/h1&gt;&#xA;&lt;h2 id=&#34;子空间&#34;&gt;子空间&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;三维空间中，任意穿过原点的平面构成子空间&lt;/li&gt;&#xA;&lt;li&gt;任意穿过原点的直线也构成子空间&lt;/li&gt;&#xA;&lt;li&gt;一个平面与一条直线的并集不是子空间（加法不封闭）&lt;/li&gt;&#xA;&lt;li&gt;一个平面与一条直线的交集是子空间&lt;/li&gt;&#xA;&lt;li&gt;任意两个子空间的交集也依然是子空间&lt;/li&gt;&#xA;&lt;li&gt;向量空间必须满足的条件：加法封闭和数乘封闭&lt;/li&gt;&#xA;&lt;li&gt;零向量是个特殊的向量空间&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;两种构筑子空间的方法&#34;&gt;两种构筑子空间的方法：&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;从几个向量，通过线性组合&lt;/li&gt;&#xA;&lt;li&gt;在一个方程组中，通过让x满足特定条件（齐次线性方程组）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;求解线性方程组&#34;&gt;求解线性方程组&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Ax = b有解，当且仅当b是A的各列向量的线性组合&lt;/li&gt;&#xA;&lt;li&gt;即b属于A的列空间&lt;/li&gt;&#xA;&lt;li&gt;A列的个数n等于未知数的个数&lt;/li&gt;&#xA;&lt;li&gt;A行的个数m等于方程的个数&lt;/li&gt;&#xA;&lt;li&gt;当b是零向量时，x是子空间，否则不是（否则不能穿过原点）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;矩阵的秩r&#34;&gt;矩阵的秩r&lt;/h2&gt;&#xA;&lt;p&gt;自由变量：任意选取自由变量的值，再求解其他的    &lt;br&gt;&#xA;特解（特定的解）：自由向量赋值为0、1 &lt;br&gt;&#xA;有n-r个自由变量  &lt;br&gt;&#xA;行阶梯形矩阵&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
