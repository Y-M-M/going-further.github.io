<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rust on 陈皮的博客</title>
    <link>https://y-m-m.github.io/tags/rust/</link>
    <description>Recent content in Rust on 陈皮的博客</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 14 Nov 2024 20:31:24 +0800</lastBuildDate>
    <atom:link href="https://y-m-m.github.io/tags/rust/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Rust入门</title>
      <link>https://y-m-m.github.io/post/rust/</link>
      <pubDate>Tue, 12 Nov 2024 00:00:00 +0000</pubDate>
      <guid>https://y-m-m.github.io/post/rust/</guid>
      <description>&lt;h1 id=&#34;第一章-rust入门&#34;&gt;第一章 Rust入门&lt;/h1&gt;&#xA;&lt;h2 id=&#34;11-rust简介&#34;&gt;1.1 Rust简介&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;可靠+高效&lt;/li&gt;&#xA;&lt;li&gt;可用来替换C/C++，很多常见的bug在编译时就可以被消灭&lt;/li&gt;&#xA;&lt;li&gt;适用于以下场景&#xA;&lt;ul&gt;&#xA;&lt;li&gt;需要运行时的速度&lt;/li&gt;&#xA;&lt;li&gt;需要内存安全&lt;/li&gt;&#xA;&lt;li&gt;更好的利用多处理器&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;与其他语言比较&#xA;&lt;ul&gt;&#xA;&lt;li&gt;C/C++ 性能非常好，但类型系统和内存都不太安全&lt;/li&gt;&#xA;&lt;li&gt;Java/C# 拥有GC，能保证内存安全，也有很多优秀特性，但性能不行&lt;/li&gt;&#xA;&lt;li&gt;Rust&#xA;&lt;ul&gt;&#xA;&lt;li&gt;安全&lt;/li&gt;&#xA;&lt;li&gt;无需GC&lt;/li&gt;&#xA;&lt;li&gt;易于维护、调试，代码安全高效&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;特别擅长的领域&#xA;&lt;ul&gt;&#xA;&lt;li&gt;高性能Web Service&lt;/li&gt;&#xA;&lt;li&gt;WebAssembly&lt;/li&gt;&#xA;&lt;li&gt;命令行工具&lt;/li&gt;&#xA;&lt;li&gt;网络编程&lt;/li&gt;&#xA;&lt;li&gt;嵌入式设备&lt;/li&gt;&#xA;&lt;li&gt;系统编程&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Rust 与 FireFox&lt;/li&gt;&#xA;&lt;li&gt;Rust的用户和案例&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Google&lt;/li&gt;&#xA;&lt;li&gt;Amazon&lt;/li&gt;&#xA;&lt;li&gt;System76&lt;/li&gt;&#xA;&lt;li&gt;蚂蚁金服&lt;/li&gt;&#xA;&lt;li&gt;斯坦福和密歇根大学&lt;/li&gt;&#xA;&lt;li&gt;微软&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Rust的优点&#xA;&lt;ul&gt;&#xA;&lt;li&gt;性能&lt;/li&gt;&#xA;&lt;li&gt;安全性&lt;/li&gt;&#xA;&lt;li&gt;无所畏惧的并发&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;缺点&#xA;&lt;ul&gt;&#xA;&lt;li&gt;难学&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;注意&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Rust有很多独有的概念，和现在大多数主流语言都不同&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;12-安装rust&#34;&gt;1.2 安装Rust&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Mac or Linux&#xA;&lt;ul&gt;&#xA;&lt;li&gt;curl &lt;a href=&#34;https://sh.rustup.rs&#34;&gt;https://sh.rustup.rs&lt;/a&gt; -sSf | sh&lt;/li&gt;&#xA;&lt;li&gt;添加环境变量&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;更新Rust&#xA;&lt;ul&gt;&#xA;&lt;li&gt;rustup update&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;卸载Rust&#xA;&lt;ul&gt;&#xA;&lt;li&gt;rustup self uninstall&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;安装验证&#xA;&lt;ul&gt;&#xA;&lt;li&gt;rustc &amp;ndash;version&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;本地文档&#xA;&lt;ul&gt;&#xA;&lt;li&gt;rustup doc&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;开发工具&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Visual Studio Code&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Rust插件&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Clion&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Rust插件&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;13-hello-world&#34;&gt;1.3 Hello World!&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Rust&#34; data-lang=&#34;Rust&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// fn 新建函数&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;fn&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// main函数是每个Rust可执行程序最先运行的代码&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;fm&#34;&gt;println!&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Hello, world!&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// Rust的缩进是4个空格，而非tab键&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// pritln!是一个Rust macro(宏)而非函数，函数没有!&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// &amp;#34;Hello world&amp;#34;是字符串，是println!的参数&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 代码以分号结束&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// 编译和运行是单独的两步&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// rustc 文件名-&amp;gt;可执行文件&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// rustc 是预编译的语言 ，可以先编译程序，然后把可执行文件交给别人运行&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// rustc 只适合简单的Rust程序&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;14-cargo&#34;&gt;1.4 Cargo&lt;/h2&gt;&#xA;&lt;h3 id=&#34;什么是cargo&#34;&gt;什么是Cargo?&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Cargo是Rust的构建系统和包管理工具&#xA;&lt;ul&gt;&#xA;&lt;li&gt;构建代码、下载依赖的库、构建这些库&amp;hellip;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;安装Rust的时候会安装Cargo&#xA;&lt;ul&gt;&#xA;&lt;li&gt;cargo &amp;ndash;version&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;使用cargo创建项目&#34;&gt;使用Cargo创建项目&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;cargo new hello_cargo&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
